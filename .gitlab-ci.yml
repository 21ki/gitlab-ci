image: harbor.mvmyun.com/library/alpine:latest
variables:
  MAVEN_CLI_OPTS: "-gs /opt/settings.xml --batch-mode"
  #MAVEN_OPTS: "-Dmaven.repo.local=/opt/.m2/repository"
  JVM: " "
  #发版dev测试环境
  K8S_ENVIRONMENT: dev
  #发版应用
  APPLICATION: spring-hello-world
  KUBECONFIG: /etc/deploy/config
  #镜像仓库用户
  CONTAINER_REPO_USERNAME: ${HARBOR_REPO_USERNAME}
  #镜像仓库密码
  CONTAINER_REPO_PASSWORD: ${HARBOR_REPO_PASSWORD}
  #mvn_deploy,mvn_install,gradle编译工具
  BUILD_TOOL: mvn_deploy
  #下游项目触发TOKEN
  HOTEL_QUNAR_API_TOKEN: a7d6a429fe60c5f64588781b543f9d
  HOTEL_QUNAR_ORDER_TOKEN: 6c898fc00b8d62c9a970c1f79374f5
  REF_NAME: master

#services:
#  - docker:dind

#cache:
#  paths:
#    - /opt/.m2/

#before_script:
#  - rm -rf /opt/.m2/repository || true
#  - tar -xzf .gitlab-cache.tar.gz -C / || true
#  - source .${CI_COMMIT_REF_NAME}.env
#after_script:
#  - tar -czf .gitlab-cache.tar.gz /usr/local/cargo/registry || true


#定义流程
stages:
  #- package
  - deploy_k8s
  
before_script:
  - echo "开始前脚本"

deploy_k8s_job:
  #image: registry.cn-hangzhou.aliyuncs.com/haoshuwei24/kubectl:1.16.6
  image: harbor.mvmyun.com/library/kubectl:1.19.4
  stage: deploy_k8s
  script:
    - mkdir -p $HOME/.kube
    - echo $KUBECONFIG_DEV |base64 -d > $HOME/.kube/config
    - chown $(id -u):$(id -g) $HOME/.kube/config
    - kubectl get node
  tags:
    - docker
  only:
    - tags
    - master