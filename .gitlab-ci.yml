image: harbor.mvmyun.com/library/alpine:latest
variables:
  MAVEN_CLI_OPTS: "-gs /opt/settings.xml --batch-mode"
  #MAVEN_OPTS: "-Dmaven.repo.local=/opt/.m2/repository"
  JVM: " "
  #发版dev测试环境
  K8S_ENVIRONMENT: dev
  #发版应用
  APPLICATION: spring-hello-world
  KUBECONFIG: /etc/deploy/config
  #镜像仓库用户
  CONTAINER_REPO_USERNAME: ${HARBOR_REPO_USERNAME}
  #镜像仓库密码
  CONTAINER_REPO_PASSWORD: ${HARBOR_REPO_PASSWORD}
  #mvn_deploy,mvn_install,gradle编译工具
  BUILD_TOOL: mvn_deploy
  #下游项目触发TOKEN
  HOTEL_QUNAR_API_TOKEN: a7d6a429fe60c5f64588781b543f9d
  HOTEL_QUNAR_ORDER_TOKEN: 6c898fc00b8d62c9a970c1f79374f5
  REF_NAME: master

#services:
#  - docker:dind

#cache:
#  paths:
#    - /opt/.m2/

#before_script:
#  - rm -rf /opt/.m2/repository || true
#  - tar -xzf .gitlab-cache.tar.gz -C / || true
#  - source .${CI_COMMIT_REF_NAME}.env
#after_script:
#  - tar -czf .gitlab-cache.tar.gz /usr/local/cargo/registry || true


#定义流程
stages:
  - package
  - deploy_k8s
  
before_script:
  - echo "开始前脚本"
  
package:
  #image: harbor.mvmyun.com/library/maven:3.6.3-jdk-11
  stage: package
  before_script:
    - curl https://gitlab.mvmyun.com/devops/gitlabci-templates/raw/master/mvn/settings.xml -o /opt/settings.xml
    - export JAVA_HOME=/opt/tools/sdkman/candidates/java/11.0.9.fx-zulu
    #- export JRE_HOME=$JAVA_HOME/jre
    - export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
    #- export CLASSPATH=:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/dt.jar
    #- export JAVA_HOME JRE_HOME PATH CLASSPAT
  script:
  - pwd
  - ls /opt
  - ls
  - ls -a 
  #- ls /opt/.m2/repository/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0.jar
  - cat /etc/*release*
  #- mvn $MAVEN_CLI_OPTS $JVM -Dmaven.test.skip=true clean install -P${K8S_ENVIRONMENT}
  - mvn -version
  tags:
    - jks
  only:
    - tags
    - master


deploy_k8s_job:
  image: harbor.mvmyun.com/library/kubectl:1.16.6
  stage: deploy_k8s
  tags:
    - docker
  before_script:
    - mkdir -p /etc/deploy
    - echo $KUBECONFIG_DEV_BIN |base64 -d > $KUBECONFIG   
  script:
    - kubectl get node  